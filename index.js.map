{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst refs = {\n  form: document.querySelector('.js-form'),\n  add: document.querySelector('.js-add'),\n  cont: document.querySelector('.js-container'),\n  list: document.querySelector('.js-list'),\n};\n\nrefs.add.addEventListener('click', addField);\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction addField() {\n  refs.cont.insertAdjacentHTML(\n    'beforeend',\n    '<input type=\"text\" name=\"country\" placeholder=\"Search country\" />'\n  );\n}\n\nasync function onSubmit(ev) {\n  ev.preventDefault();\n\n  const formData = new FormData(ev.currentTarget);\n  const countries = formData\n    .getAll('country')\n    .map(country => country.trim())\n    .filter(country => country);\n\n  try {\n    const respCountries = await getCountries(countries);\n    const capitals = respCountries.map(country => country.capital[0]);\n    const respWeather = await getWeather(capitals);\n    refs.list.innerHTML = createMarkup(respWeather);\n  } catch (err) {}\n\n  refs.form.reset();\n}\n\nasync function getCountries(countries) {\n  axios.defaults.baseURL = 'https://restcountries.com/v3.1/name/';\n  const resps = countries.map(async country => axios.get(`${country}`));\n\n  const data = await Promise.allSettled(resps);\n\n  return data\n    .filter(resp => resp.status === 'fulfilled')\n    .map(resp => resp.value.data[0]);\n}\nasync function getWeather(capitals) {\n  axios.defaults.baseURL = 'http://api.weatherapi.com/v1';\n  const resps = capitals.map(async capital =>\n    axios.get('/current.json', {\n      params: {\n        key: 'b6bbf5ee5b904a2bb6374500242309',\n        q: capital,\n        lang: 'uk',\n      },\n    })\n  );\n  const data = await Promise.allSettled(resps);\n\n  return data\n    .filter(resp => resp.status === 'fulfilled')\n    .map(resp => resp.value.data);\n}\nfunction createMarkup(capitals) {\n  return capitals\n    .map(\n      ({\n        location: { country, name },\n        current: {\n          temp_c,\n          condition: { icon, text },\n        },\n      }) => ` <li class='card'>\n        <img src=\"${icon}\" alt=\"${text}\" class='img' />\n        <h3>${country}</h3>\n        <h3>${name}</h3>\n        <p>${temp_c} degr. C</p>\n        <p>${text}</p>\n      </li>`\n    )\n    .join('');\n}\n"],"names":["refs","addField","onSubmit","ev","countries","country","capitals","getCountries","respWeather","getWeather","createMarkup","axios","resps","resp","capital","name","temp_c","icon","text"],"mappings":"svBAEA,MAAMA,EAAO,CACX,KAAM,SAAS,cAAc,UAAU,EACvC,IAAK,SAAS,cAAc,SAAS,EACrC,KAAM,SAAS,cAAc,eAAe,EAC5C,KAAM,SAAS,cAAc,UAAU,CACzC,EAEAA,EAAK,IAAI,iBAAiB,QAASC,CAAQ,EAC3CD,EAAK,KAAK,iBAAiB,SAAUE,CAAQ,EAE7C,SAASD,GAAW,CAClBD,EAAK,KAAK,mBACR,YACA,mEACJ,CACA,CAEA,eAAeE,EAASC,EAAI,CAC1BA,EAAG,eAAc,EAGjB,MAAMC,EADW,IAAI,SAASD,EAAG,aAAa,EAE3C,OAAO,SAAS,EAChB,IAAIE,GAAWA,EAAQ,MAAM,EAC7B,OAAOA,GAAWA,CAAO,EAE5B,GAAI,CAEF,MAAMC,GADgB,MAAMC,EAAaH,CAAS,GACnB,IAAIC,GAAWA,EAAQ,QAAQ,CAAC,CAAC,EAC1DG,EAAc,MAAMC,EAAWH,CAAQ,EAC7CN,EAAK,KAAK,UAAYU,EAAaF,CAAW,CAClD,MAAgB,CAAE,CAEhBR,EAAK,KAAK,OACZ,CAEA,eAAeO,EAAaH,EAAW,CACrCO,EAAM,SAAS,QAAU,uCACzB,MAAMC,EAAQR,EAAU,IAAI,MAAMC,GAAWM,EAAM,IAAI,GAAGN,CAAO,EAAE,CAAC,EAIpE,OAFa,MAAM,QAAQ,WAAWO,CAAK,GAGxC,OAAOC,GAAQA,EAAK,SAAW,WAAW,EAC1C,IAAIA,GAAQA,EAAK,MAAM,KAAK,CAAC,CAAC,CACnC,CACA,eAAeJ,EAAWH,EAAU,CAClCK,EAAM,SAAS,QAAU,+BACzB,MAAMC,EAAQN,EAAS,IAAI,MAAMQ,GAC/BH,EAAM,IAAI,gBAAiB,CACzB,OAAQ,CACN,IAAK,iCACL,EAAGG,EACH,KAAM,IACP,CACP,CAAK,CACL,EAGE,OAFa,MAAM,QAAQ,WAAWF,CAAK,GAGxC,OAAOC,GAAQA,EAAK,SAAW,WAAW,EAC1C,IAAIA,GAAQA,EAAK,MAAM,IAAI,CAChC,CACA,SAASH,EAAaJ,EAAU,CAC9B,OAAOA,EACJ,IACC,CAAC,CACC,SAAU,CAAE,QAAAD,EAAS,KAAAU,CAAM,EAC3B,QAAS,CACP,OAAAC,EACA,UAAW,CAAE,KAAAC,EAAM,KAAAC,CAAM,CAC1B,CACT,IAAY;AAAA,oBACQD,CAAI,UAAUC,CAAI;AAAA,cACxBb,CAAO;AAAA,cACPU,CAAI;AAAA,aACLC,CAAM;AAAA,aACNE,CAAI;AAAA,YAEZ,EACA,KAAK,EAAE,CACZ"}